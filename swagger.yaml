openapi: 3.0.0
info:
  title: Job-Search
  version: 1.0.0
servers:
  - url: https://job-search-iogy.onrender.com/api/v1
    description: Production server

tags:
  - name: Auth
    description: Operations related to authentication
  - name: User
    description: Operations related to user management

paths:
  /auth/register/admin:
    post:
      summary: Register Admin
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            example:
              firstName: Annadiane
              lastName: Quilleash
              email: aquilleash1@apache.org
              password: secret
              confirmPassword: secret
      responses:
        '201':
          description: Successfully registered admin
          content:
            application/json:
              example:
                admin:
                  firstName: Annadiane
                  lastName: Quilleash
                  email: aquilleash1@apache.org

  /auth/register/customer:
    post:
      summary: Register Customer
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            example:
              firstName: Agace
              lastName: Dignon
              email: adignon1@marketwatch.com
              password: secret
              confirmPassword: secret
      responses:
        '201':
          description: Successfully registered customer
          content:
            application/json:
              example:
                customer:
                  firstName: Agace
                  lastName: Dignon
                  email: adignon1@marketwatch.com

  /auth/register/job:
    post:
      summary: Register Job
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            example:
              firstName: Manda
              lastName: Killiam
              email: mkilliam1@google.ru
              phone: +46 621 762 0005
              whatsapp: +257 530 476 9762
              occupation: Structural Analysis Engineer
              password: secret
              confirmPassword: secret
      responses:
        '201':
          description: Successfully registered job
          content:
            application/json:
              example:
                job:
                  firstName: Manda
                  lastName: Killiam
                  email: mkilliam1@google.ru
                  occupation: Structural Analysis Engineer

  /auth/login:
    post:
      summary: Login
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            example:
              email: aquilleash1@apache.org
              password: secret
      responses:
        '200':
          description: Successfully logged in
          content:
            application/json:
              example:
                token: "your_access_token_here"

  /auth/logout:
    get:
      summary: Logout
      tags:
        - Auth
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully logged out
          content:
            application/json:
              example:
                msg: Logged out successfully

  /user/customer:
    get:
      summary: Get All Customers
      tags:
        - User
      security:
        - bearerAuth: []
      parameters:
        - name: sort
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved customers
          content:
            application/json:
              example:
                customers: [...] # Your list of customers here
                totalCustomers: 10
                numOfPages: 1

  /user/job:
    get:
      summary: Get All Jobs
      tags:
        - User
      security:
        - bearerAuth: []
      parameters:
        - name: search
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved jobs
          content:
            application/json:
              example:
                jobs: [...] # Your list of jobs here
                totalJobs: 5
                numOfPages: 1

  /user/show-me:
    get:
      summary: Show Current User
      tags:
        - User
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully retrieved current user
          content:
            application/json:
              example:
                admin: { user details } # Example response for an admin

  /user/get-single-job/{userId}:
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get Single Job
      tags:
        - User
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully retrieved job
          content:
            application/json:
              example:
                job: { user details } # Example response for a job

  /user/update-user:
    patch:
      summary: Update User
      tags:
        - User
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            example:
              user_id: "adignon1@marketwatch.com"
              lastName: Quilleash
      responses:
        '200':
          description: Successfully updated user
          content:
            application/json:
              example:
                admin: { updated user details } # Example response for an admin

  /user/delete-user:
    delete:
      summary: Delete User
      tags:
        - User
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            example:
              user_id: "adignon1@marketwatch.com"
      responses:
        '200':
          description: Successfully deleted user
          content:
            application/json:
              example:
                msg: User deleted successfully

security:
  - bearerAuth: []
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
